linters:
  enable-all: true
  disable:
    - gochecknoglobals
    - gofumpt
    - goerr113 # deprecated.
    - golint # deprecated.
    - nosnakecase # deprecated.
    - depguard # not used.
    - gomnd # deprecated.
    - funlen # revive has same linter.
    - gocognit # revive has same linter.
    - gocyclo # revive has same linter.
    - cyclop # revive has same linter.
    - godox # not used.
    - lll # revive has same linter.
    - protogetter # not used.
    - intrange # useless linter.
    - exhaustruct # noisy linter.
    - wrapcheck # noisy linter.
    - nonamedreturns # checks by reviewer.
    - perfsprint # not necessary
linters-settings:
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors.
    # See the https://github.com/polyfloyd/go-errorlint for caveats.
    errorf: true
    # Permit more than 1 %w verb, valid per Go 1.20 (Requires errorf:true)
    errorf-multi: true
    # Check for plain type assertions and type switches.
    asserts: true
    # Check for plain error comparisons.
    comparison: true
  forbidigo:
    # Instead of matching the literal source code,
    # use type information to replace expressions with strings that contain the package name
    # and (for methods and fields) the type name.
    # This makes it possible to handle import renaming and forbid struct fields and methods.
    analyze-types: true
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true
    # Drops lexical ordering for custom sections.
    # Default: false
    no-lex-order: true
  gocritic:
    # Enable all checks.
    enable-all: true
    # Which checks should be disabled; can't be combined with 'enabled-checks'.
    # Default: []
    disabled-checks:
      - sloppyReassign
      - whyNoLint
    # Settings passed to gocritic.
    # The settings key is the name of a supported gocritic checker.
    # The list of supported checkers can be find in https://go-critic.github.io/overview.
    settings:
      # Must be valid enabled check name.
      captLocal:
        # Whether to restrict checker to params only.
        paramsOnly: true
      commentedOutCode:
        # Min length of the comment that triggers a warning.
        minLength: 50
      elseif:
        # Whether to skip balanced if-else pairs.
        skipBalanced: true
      hugeParam:
        # Size in bytes that makes the warning trigger.
        sizeThreshold: 160
      ifElseChain:
        # Min number of if-else blocks that makes the warning trigger.
        minThreshold: 2
      nestingReduce:
        # Min number of statements inside a branch to trigger a warning.
        bodyWidth: 2
      rangeExprCopy:
        # Size in bytes that makes the warning trigger.
        sizeThreshold: 512
        # Whether to check test functions
        skipTestFuncs: true
      rangeValCopy:
        # Size in bytes that makes the warning trigger.
        sizeThreshold: 128
        # Whether to check test functions.
        skipTestFuncs: true
      tooManyResultsChecker:
        # Maximum number of results.
        maxResults: 3
      truncateCmp:
        # Whether to skip int/uint/uintptr types.
        skipArchDependent: true
      underef:
        # Whether to skip (*x).method() calls where x is a pointer receiver.
        skipRecvDeref: false
      unnamedResult:
        # Whether to check exported functions.
        checkExported: true
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    scope: toplevel
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    exclude:
      # Exclude todo, fixme and note comments.
      - "^fixme:"
      - "^todo:"
      - "^note:"
    # Check that each sentence ends with a period.
    period: true
    # Check that each sentence starts with a capital letter.
    capital: true
  gosec:
    # To select a subset of rules to run.
    # Available rules: https://github.com/securego/gosec#available-rules
    # Default: [] - means include all rules
    includes: []
    # To specify a set of rules to explicitly exclude.
    # Available rules: https://github.com/securego/gosec#available-rules
    # Default: []
    excludes:
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G115 # Potential integer overflow when converting between integer types
      - G202 # SQL query construction using string concatenation
    # Exclude generated files
    exclude-generated: true
    # Filter out the issues with a lower severity than the given value.
    # Valid options are: low, medium, high.
    severity: medium
    # Filter out the issues with a lower confidence than the given value.
    # Valid options are: low, medium, high.
    confidence: medium
  govet:
    # Enable all analyzers.
    enable-all: true
    # Disable analyzers by name.
    # (in addition to default
    #   atomicalign, deepequalerrors, fieldalignment, findcall, nilness, reflectvaluecompare, shadow, sortslice,
    #   timeformat, unusedwrite
    # ).
    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.
    disable: 
      - fieldalignment # for our project this is not important.
    # Settings per analyzer.
    settings:
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        strict: false
  grouper:
    # Require the use of a single global 'const' declaration only.
    const-require-single-const: false
    # Require the use of grouped global 'const' declarations.
    const-require-grouping: false
    # Require the use of a single 'import' declaration only.
    import-require-single-import: true
    # Require the use of grouped 'import' declarations.
    import-require-grouping: false
    # Require the use of a single global 'type' declaration only.
    type-require-single-type: false
    # Require the use of grouped global 'type' declarations.
    type-require-grouping: false
    # Require the use of a single global 'var' declaration only.
    var-require-single-var: false
    # Require the use of grouped global 'var' declarations.
    var-require-grouping: false
  inamedparam:
    # Skips check for interface methods with only a single parameter.
    skip-single-param: false
  interfacebloat:
    # The maximum number of methods allowed for an interface.
    max: 4
  ireturn:
    # List of interfaces to allow.
    # Lists of the keywords and regular expressions matched to interface or package names can be used.
    # `allow` and `reject` settings cannot be used at the same time.
    #
    # Keywords:
    # - `empty` for `interface{}`
    # - `error` for errors
    # - `stdlib` for standard library
    # - `anon` for anonymous interfaces
    # - `generic` for generic interfaces added in go 1.18
    #
    # Default: [anon, error, empty, stdlib]
    allow:
      - anon
      - error
      - empty 
      - stdlib
      # You can specify idiomatic endings for interface
      - (or|er)$
    # List of interfaces to reject.
    # Lists of the keywords and regular expressions matched to interface or package names can be used.
    # `allow` and `reject` settings cannot be used at the same time.
    #
    # Keywords:
    # - `empty` for `interface{}`
    # - `error` for errors
    # - `stdlib` for standard library
    # - `anon` for anonymous interfaces
    # - `generic` for generic interfaces added in go 1.18
    #
    # Default: []
    reject: []
  mnd:
    # List of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
    # Default: ["argument", "case", "condition", "operation", "return", "assign"]
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    # List of numbers to exclude from analysis.
    # The numbers should be written as string.
    # Values always ignored: "1", "1.0", "0" and "0.0"
    # Default: []
    ignored-numbers:
      - '3'
      - '24'
      - '512'
    # List of file patterns to exclude from analysis.
    # Values always ignored: `.+_test.go`
    # Default: []
    ignored-files: []
    # List of function patterns to exclude from analysis.
    # Following functions are always ignored: `time.Date`,
    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,
    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.
    ignored-functions:
      - '^math\.'
      - '^http\.StatusText$'
      - '^strconv\.'
      - '^time\.'
  nestif:
    # Minimal complexity of if statements to report.
    min-complexity: 2
  nlreturn:
    # Size of the block (including return statement that is still "OK")
    # so no return split required.
    block-size: 1
  nonamedreturns:
    # Report named error if it is assigned inside defer.
    report-error-in-defer: true
  perfsprint:
    # Optimizes even if it requires an int or uint type cast.
    int-conversion: true
    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.
    err-error: true
    # Optimizes `fmt.Errorf`.
    errorf: false
    # Optimizes `fmt.Sprintf` with only one argument.
    sprintf1: false
    # Optimizes into strings concatenation.
    strconcat: true
  prealloc:
    # IMPORTANT: we don't recommend using this linter before doing performance profiling.
    # For most programs usage of prealloc will be a premature optimization.
    # Report pre-allocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    simple: true
    # Report pre-allocation suggestions on range loops.
    range-loops: true
    # Report pre-allocation suggestions on for loops.
    for-loops: true
  revive:
    # Maximum number of open files at the same time.
    # See https://github.com/mgechev/revive#command-line-flags
    # Defaults to unlimited.
    max-open-files: 2048
    # When set to false, ignores files with "GENERATED" header, similar to golint.
    # See https://github.com/mgechev/revive#available-rules for details.
    ignore-generated-header: true
    # Sets the default severity.
    # See https://github.com/mgechev/revive#configuration
    # Default: warning
    ## NOTE: Stopped here.
    severity: warning
    # Enable all available rules.
    # Default: false
    enable-all-rules: true
    # Sets the default failure confidence.
    # This means that linting errors with less than 0.8 confidence will be ignored.
    confidence: 0.5
    rules:
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant
      - name: add-constant
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - maxLitCount: "5"
            allowStrs: '""'
            allowInts: "0,1,2"
            allowFloats: "0.0,0.,1.0,1.,2.0,2."
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#argument-limit
      - name: argument-limit
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [5]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#atomic
      - name: atomic
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#banned-characters
      - name: banned-characters
        severity: warning
        disabled: false
        exclude: [""]
        arguments: ["Ω", "Σ", "σ", "7"]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bare-return
      - name: bare-return
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports
      - name: blank-imports
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bool-literal-in-expr
      - name: bool-literal-in-expr
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#call-to-gc
      - name: call-to-gc
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity
      - name: cognitive-complexity
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [8]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comment-spacings
      - name: comment-spacings
        severity: warning
        disabled: false
        exclude: [""]
        arguments: []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comments-density
      - name: comments-density
        severity: warning
        disabled: true
        exclude: [""]
        arguments: [15]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-naming
      - name: confusing-naming
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-results
      - name: confusing-results
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#constant-logical-expr
      - name: constant-logical-expr
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument
      - name: context-as-argument
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - allowTypesBefore: "*testing.T"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-keys-type
      - name: context-keys-type
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cyclomatic
      - name: cyclomatic
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [10]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#datarace
      - name: datarace
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#deep-exit
      - name: deep-exit
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#defer
      - name: defer
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - ["call-chain", "loop"]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#dot-imports
      - name: dot-imports
        severity: warning
        disabled: false
        exclude: [""]
        arguments: []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports
      - name: duplicated-imports
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return
      - name: early-return
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "preserveScope"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block
      - name: empty-block
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines
      - name: empty-lines
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-map-style
      - name: enforce-map-style
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "make"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-repeated-arg-type-style
      - name: enforce-repeated-arg-type-style
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "any"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-slice-style
      - name: enforce-slice-style
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "make"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-naming
      - name: error-naming
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-return
      - name: error-return
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-strings
      - name: error-strings
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#errorf
      - name: errorf
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported
      - name: exported
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-header
      - name: file-header
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#flag-parameter
      - name: flag-parameter
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-length
      - name: function-length
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [18, 75]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-result-limit
      - name: function-result-limit
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [3]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#get-return
      - name: get-return
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#identical-branches
      - name: identical-branches
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#if-return
      - name: if-return
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-alias-naming
      - name: import-alias-naming
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "^[a-z][a-z0-9]{0,}$"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing
      - name: import-shadowing
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#imports-blocklist
      - name: imports-blocklist
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "crypto/md5"
          - "crypto/sha1"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#increment-decrement
      - name: increment-decrement
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow
      - name: indent-error-flow
        severity: warning
        disabled: false
        exclude: [""]
        arguments: []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit
      - name: line-length-limit
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [125]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-control-nesting
      - name: max-control-nesting
        severity: warning
        disabled: false
        exclude: [""]
        arguments: [3]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-public-structs
      - name: max-public-structs
        severity: warning
        disabled: true
        exclude: [""]
        arguments: [5]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-parameter
      - name: modifies-parameter
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-value-receiver
      - name: modifies-value-receiver
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#nested-structs
      - name: nested-structs
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#optimize-operands-order
      - name: optimize-operands-order
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#package-comments
      - name: package-comments
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range
      - name: range
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-address
      - name: range-val-address
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-in-closure
      - name: range-val-in-closure
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#receiver-naming
      - name: receiver-naming
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redefines-builtin-id
      - name: redefines-builtin-id
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redundant-import-alias
      - name: redundant-import-alias
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-format
      - name: string-format
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - - 'core.WriteError[1].Message'
            - '/^([^A-Z]|$)/'
            - must not start with a capital letter
          - - 'fmt.Errorf[0]'
            - '/(^|[^\.!?])$/'
            - must not end in punctuation
          - - panic
            - '/^[^\n]*$/'
            - must not contain line breaks
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-of-int
      - name: string-of-int
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#struct-tag
      - name: struct-tag
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "json,inline"
          - "bson,outline,gnu"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#superfluous-else
      - name: superfluous-else
        severity: warning
        disabled: false
        exclude: [""]
        arguments: []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-equal
      - name: time-equal
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-naming
      - name: time-naming
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unchecked-type-assertion
      - name: unchecked-type-assertion
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - acceptIgnoredAssertionResult: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unconditional-recursion
      - name: unconditional-recursion
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-naming
      - name: unexported-naming
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return
      - name: unexported-return
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error
      - name: unhandled-error
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - "fmt.Printf"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt
      - name: unnecessary-stmt
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unreachable-code
      - name: unreachable-code
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter
      - name: unused-parameter
        severity: warning
        disabled: false
        exclude: [""]
        arguments:
          - allowRegex: "^_"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-receiver
      - name: unused-receiver
        severity: warning
        disabled: true
        exclude: [""]
        arguments:
          - allowRegex: "^_"
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#use-any
      - name: use-any
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#useless-break
      - name: useless-break
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-declaration
      - name: var-declaration
        severity: warning
        disabled: false
        exclude: [""]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-naming
      - name: var-naming
        severity: warning
        disabled: true # used stylecheck linter instead of this.
        exclude: [""]
        arguments:
          - ["ID"] # AllowList
          - ["VM", "Id"] # DenyList
          - - upperCaseConst: true # Extra parameter (upperCaseConst|skipPackageNameChecks)
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#waitgroup-by-value
      - name: waitgroup-by-value
        severity: warning
        disabled: false
        exclude: [""]
  sloglint:
    # Enforce not mixing key-value pairs and attributes.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-mixed-arguments
    no-mixed-args: true
    # Enforce using key-value pairs only (overrides no-mixed-args, incompatible with attr-only).
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-value-pairs-only
    kv-only: false
    # Enforce using attributes only (overrides no-mixed-args, incompatible with kv-only).
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#attributes-only
    attr-only: false
    # Enforce not using global loggers.
    # Values:
    # - "": disabled
    # - "all": report all global loggers
    # - "default": report only the default slog logger
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global
    no-global: ""
    # Enforce using methods that accept a context.
    # Values:
    # - "": disabled
    # - "all": report all contextless calls
    # - "scope": report only if a context exists in the scope of the outermost function
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only
    context: ""
    # Enforce using static values for log messages.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages
    static-msg: false
    # Enforce using constants instead of raw keys.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys
    no-raw-keys: false
    # Enforce a single key naming convention.
    # Values: snake, kebab, camel, pascal
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention
    # Default: ""
    key-naming-case: camel
    # Enforce not using specific keys.
    forbidden-keys:
      - time
      - level
      - msg
      - source
      - foo
    # Enforce putting arguments on separate lines.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#forbidden-keys
    args-on-sep-lines: false
  stylecheck:
    # STxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    # https://staticcheck.io/docs/configuration/options/#initialisms
    # Default: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    initialisms: 
      - "ACL"
      - "API"
      - "ASCII"
      - "CPU"
      - "CSS"
      - "DNS"
      - "EOF"
      - "GUID"
      - "HTML"
      - "HTTP"
      - "HTTPS"
      - "ID"
      - "IP"
      - "JSON"
      - "QPS"
      - "RAM"
      - "RPC"
      - "SLA"
      - "SMTP"
      - "SQL"
      - "SSH"
      - "TCP"
      - "TLS"
      - "TTL"
      - "UDP"
      - "UI"
      - "GID"
      - "UID"
      - "UUID"
      - "URI"
      - "URL"
      - "UTF8"
      - "XSRF"
      - "XSS"
      - "SIP"
      - "RTP"
      - "AMQP"
      - "DB"
      - "TS"
    # https://staticcheck.io/docs/configuration/options/#http_status_code_whitelist
    http-status-code-whitelist: []
  tagalign:
    # Align and sort can be used together or separately.
    #
    # Whether enable align. If true, the struct tags will be aligned.
    # e.g.:
    # type FooBar struct {
    #     Bar    string `json:"bar" validate:"required"`
    #     FooFoo int8   `json:"foo_foo" validate:"required"`
    # }
    # will be formatted to:
    # type FooBar struct {
    #     Bar    string `json:"bar"     validate:"required"`
    #     FooFoo int8   `json:"foo_foo" validate:"required"`
    # }
    align: false
    # Whether enable tags sort.
    # If true, the tags will be sorted by name in ascending order.
    # e.g.: `xml:"bar" json:"bar" validate:"required"` -> `json:"bar" validate:"required" xml:"bar"`
    # Default: true
    sort: false
    # Specify the order of tags, the other tags will be sorted by name.
    # This option will be ignored if `sort` is false.
    # Default: []
    order:
      - json
      - yaml
      - yml
      - toml
    # Whether enable strict style.
    # In this style, the tags will be sorted and aligned in the dictionary order,
    # and the tags with the same name will be aligned together.
    # Note: This option will be ignored if 'align' or 'sort' is false.
    # Default: false
    strict: true
  tagliatelle:
    # Check the struct tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      use-field-name: false
      # `camel` is used for `json` and `yaml`, and `header` is used for `header` (can be overridden)
      # Default: {}
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`
        json: camel
        yaml: camel
        xml: camel
        toml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
        env: upperSnake
        envconfig: upperSnake
  testifylint:
    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).
    # Default: false
    enable-all: true
    # Disable checkers by name
    # (in addition to default
    #   suite-thelper
    # ).
    disable: []
    bool-compare:
      # To ignore user defined types (over builtin bool).
      ignore-custom-types: true
    expected-actual:
      # Regexp for expected variable name.
      # Default: (^(exp(ected)?|want(ed)?)([A-Z]\w*)?$)|(^(\w*[a-z])?(Exp(ected)?|Want(ed)?)$)
      pattern: ^expected
    formatter:
      # To enable go vet's printf checks.
      check-format-string: false
      # To require f-assertions if format string is used.
      require-f-funcs: true
    go-require:
      # To ignore HTTP handlers (like http.HandlerFunc).
      # Default: false
      ignore-http-handlers: true
    require-error:
      # Regexp for assertions to analyze. If defined, then only matched error assertions will be reported.
      # Default: ""
      fn-pattern: ^(Errorf?|NoErrorf?)$
    suite-extra-assert-call:
      # To require or remove extra Assert() call?
      # Default: remove
      mode: require
      linters-settings:
  usestdlibvars:
    # Suggest the use of http.MethodXX.
    http-method: true
    # Suggest the use of http.StatusXX.
    http-status-code: true
    # Suggest the use of time.Weekday.String().
    time-weekday: true
    # Suggest the use of time.Month.String().
    time-month: false
    # Suggest the use of time.Layout.
    time-layout: false
    # Suggest the use of crypto.Hash.String().
    crypto-hash: false
    # Suggest the use of rpc.DefaultXXPath.
    default-rpc-path: false
    # Suggest the use of sql.LevelXX.String().
    sql-isolation-level: true
    # Suggest the use of tls.SignatureScheme.String().
    tls-signature-scheme: true
    # Suggest the use of constant.Kind.String().
    constant-kind: true
  unused:
    # Mark all struct fields that have been written to as used.
    field-writes-are-uses: true
    # Treat IncDec statement (e.g. `i++` or `i--`) as both read and write operation instead of just write.
    post-statements-are-reads: true
    # Mark all exported fields as used.
    exported-fields-are-used: false
    # Mark all function parameters as used.
    parameters-are-used: true
    # Mark all local variables as used.
    local-variables-are-used: false
    # Mark all identifiers inside generated files as used.
    generated-is-used: true
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    max-distance: 30
    # The minimum length of a variable's name that is considered "long".
    # Variable names that are at least this long will be ignored.
    min-name-length: 3
    # Check method receivers.
    check-receiver: false
    # Check named return values.
    check-return: false
    # Check type parameters.
    check-type-param: false
    # Ignore "ok" variables that hold the bool return value of a type assertion.
    ignore-type-assert-ok: true
    # Ignore "ok" variables that hold the bool return value of a map index.
    ignore-map-index-ok: true
    # Ignore "ok" variables that hold the bool return value of a channel receive.
    ignore-chan-recv-ok: true
    # Optional list of variable names that should be ignored completely.
    ignore-names:
      - err
      - resp
      - res
    # Optional list of variable declarations that should be ignored completely.
    # Entries must be in one of the following forms (see below for examples):
    # - for variables, parameters, named return values, method receivers, or type parameters:
    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)
    # - for constants: const <name>
    #
    # Default: []
    ignore-decls:
      - t testing.T
      - T any
      - m map[string]int
      - id uuid.UUID
      - i int
      - j int
      - e error
      - w http.ResponseWriter 
      - r *http.Request
  whitespace:
    # Enforces newlines (or comments) after every multi-line if statement.
    multi-if: false
    # Enforces newlines (or comments) after every multi-line function signature.
    multi-func: false
  # Disabled for now.
  wrapcheck:
    # An array of strings that specify substrings of signatures to ignore.
    # If this set, it will override the default set of ignored signatures.
    # See https://github.com/tomarrell/wrapcheck#configuration for more information.
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - errors.Join(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
    # An array of strings that specify regular expressions of signatures to ignore.
    # Default: []
    ignoreSigRegexps: []
    # An array of strings that specify globs of packages to ignore.
    # Default: []
    ignorePackageGlobs:
      - encoding/*
    # An array of strings that specify regular expressions of interfaces to ignore.
    # Default: []
    ignoreInterfaceRegexps: []
  wsl:
    # Do strict checking when assigning from append (x = append(x, y)).
    # If this is set to true - the append call must append either a variable
    # assigned, called or used on the line above.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#strict-append
    strict-append: true
    # Allows assignments to be cuddled with variables used in calls on
    # line above and calls to be cuddled with assignments of variables
    # used in call on line above.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-call
    allow-assign-and-call: false
    # Allows assignments to be cuddled with anything.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-anything
    allow-assign-and-anything: true
    # Allows cuddling to assignments even if they span over multiple lines.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-multiline-assign
    allow-multiline-assign: true
    # Allow multiple comments in the beginning of a block separated with newline.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-separated-leading-comment
    allow-separated-leading-comment: false
    # If the number of lines in a case block is equal to or lager than this number,
    # the case *must* end white a newline.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-case-trailing-whitespace
    force-case-trailing-whitespace: 0
    # Allow multiple var/declaration statements to be cuddled.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-cuddle-declarations
    allow-cuddle-declarations: false
    # Allow blocks to end with comments.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-trailing-comment
    allow-trailing-comment: false
    # Causes an error when an If statement that checks an error variable doesn't
    # cuddle with the assignment of that variable.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-err-cuddling
    force-err-cuddling: true
    # Causes an error if a short declaration (:=) cuddles with anything other than
    # another short declaration.
    # This logic overrides force-err-cuddling among others.
    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-short-decl-cuddling
    force-short-decl-cuddling: false
  iface:
    # List of analyzers.
    enable:
      # Identifies interfaces in the same package that have identical method sets.
      - identical 
      # Identifies interfaces that are not used anywhere in the same package where the interface is defined.
      - unused 
      # Identifies functions that return interfaces, but the actual returned value is always a single concrete implementation.
      - opaque 
issues:
  exclude-files:
    - "_test.go"
  exclude-dirs:
    - "api"
    - "mocks"
    - "xml" # in go v1.19.6 some linter look at src code of golang and return warning.
    - "internal/common"
    - "internal/container"
    - "test"
run:
  modules-download-mode: vendor
